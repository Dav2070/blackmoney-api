generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id     BigInt @id @default(autoincrement())
  uuid   String @unique @default(uuid())
  userId BigInt
  name   String @db.VarChar
  users  User[]
  rooms  Room[]
}

model User {
  id        BigInt    @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  name      String    @db.VarChar
  password  String    @db.VarChar
  role      UserRole  @default(USER)
  companyId BigInt
  company   Company   @relation(fields: [companyId], references: [id])
  sessions  Session[]
}

model Session {
  id     BigInt @id @default(autoincrement())
  uuid   String @unique @default(uuid())
  userId BigInt
  user   User   @relation(fields: [userId], references: [id])
}

model Room {
  id        BigInt   @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  name      String   @db.VarChar
  userId    BigInt?
  companyId BigInt?
  company   Company? @relation(fields: [companyId], references: [id])
  tables    Table[]
}

model Table {
  id     BigInt  @id @default(autoincrement())
  uuid   String  @unique @default(uuid())
  name   String
  roomId BigInt
  room   Room    @relation(fields: [roomId], references: [id])
  orders Order[]
}

model Order {
  id        BigInt           @id @default(autoincrement())
  uuid      String           @unique @default(uuid())
  createdAt DateTime         @default(now())
  paidAt    DateTime?
  tableId   BigInt
  table     Table            @relation(fields: [tableId], references: [id])
  products  OrderToProduct[]
}

model OrderToProduct {
  id        BigInt  @id @default(autoincrement())
  orderId   BigInt
  productId BigInt
  count     Int     @default(1)
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id         BigInt           @id @default(autoincrement())
  uuid       String           @unique @default(uuid())
  name       String
  price      Int
  categoryId BigInt
  category   Category         @relation(fields: [categoryId], references: [id])
  orders     OrderToProduct[]
}

model Category {
  id       BigInt       @id @default(autoincrement())
  uuid     String       @unique @default(uuid())
  name     String
  type     CategoryType @default(FOOD)
  products Product[]
}

model TaxRate {
  id   BigInt @id @default(autoincrement())
  rate Int    @unique
}

enum UserRole {
  ADMIN
  USER
}

enum CategoryType {
  DRINK
  FOOD
}
