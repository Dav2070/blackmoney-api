generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id     BigInt @id @default(autoincrement())
  uuid   String @unique @default(uuid())
  userId BigInt
  name   String @db.VarChar
  users  User[]
  rooms  Room[]
}

model User {
  id        BigInt    @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  name      String    @db.VarChar
  password  String    @db.VarChar
  role      UserRole  @default(USER)
  companyId BigInt
  company   Company   @relation(fields: [companyId], references: [id])
  sessions  Session[]
  orders    Order[]
}

model Session {
  id     BigInt @id @default(autoincrement())
  uuid   String @unique @default(uuid())
  userId BigInt
  user   User   @relation(fields: [userId], references: [id])
}

model Room {
  id        BigInt   @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  name      String   @db.VarChar
  userId    BigInt?
  companyId BigInt?
  company   Company? @relation(fields: [companyId], references: [id])
  tables    Table[]
}

model Table {
  id     BigInt  @id @default(autoincrement())
  uuid   String  @unique @default(uuid())
  name   Int     @default(1)
  roomId BigInt
  room   Room    @relation(fields: [roomId], references: [id])
  orders Order[]
}

model Order {
  id            BigInt         @id @default(autoincrement())
  uuid          String         @unique @default(uuid())
  createdAt     DateTime       @default(now())
  paidAt        DateTime?
  paymentMethod PaymentMethod?
  tableId       BigInt
  table         Table          @relation(fields: [tableId], references: [id])
  userId        BigInt
  user          User           @relation(fields: [userId], references: [id])
  orderItems    OrderItem[]
}

model OrderItem {
  id                  BigInt               @id @default(autoincrement())
  uuid                String               @unique @default(uuid())
  count               Int                  @default(1)
  orderId             BigInt
  productId           BigInt
  order               Order                @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product             Product              @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItemVariations OrderItemVariation[]
}

model OrderItemVariation {
  id                                 BigInt                              @id @default(autoincrement())
  uuid                               String                              @unique @default(uuid())
  orderItemId                        BigInt
  count                              Int                                 @default(1)
  orderItem                          OrderItem                           @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  orderItemVariationToVariationItems OrderItemVariationToVariationItem[]
}

model OrderItemVariationToVariationItem {
  id                   BigInt             @id @default(autoincrement())
  orderItemVariationId BigInt
  variationItemId      BigInt
  orderItemVariation   OrderItemVariation @relation(fields: [orderItemVariationId], references: [id], onDelete: Cascade)
  variationItem        VariationItem      @relation(fields: [variationItemId], references: [id], onDelete: Cascade)
}

model Product {
  id                  BigInt               @id @default(autoincrement())
  uuid                String               @unique @default(uuid())
  name                String
  price               Int
  categoryId          BigInt
  category            Category             @relation(fields: [categoryId], references: [id])
  productToVariations ProductToVariation[]
  orderItems          OrderItem[]
}

model ProductToVariation {
  id          BigInt    @id @default(autoincrement())
  productId   BigInt
  variationId BigInt
  product     Product   @relation(fields: [productId], references: [id])
  variation   Variation @relation(fields: [variationId], references: [id])
}

model Variation {
  id                  BigInt               @id @default(autoincrement())
  uuid                String               @unique @default(uuid())
  name                String
  productToVariations ProductToVariation[]
  variationItems      VariationItem[]
}

model VariationItem {
  id                                 BigInt                              @id @default(autoincrement())
  uuid                               String                              @unique @default(uuid())
  name                               String
  additionalCost                     Int
  variationId                        BigInt
  variation                          Variation                           @relation(fields: [variationId], references: [id])
  orderItemVariationToVariationItems OrderItemVariationToVariationItem[]
}

model Category {
  id       BigInt       @id @default(autoincrement())
  uuid     String       @unique @default(uuid())
  name     String
  type     CategoryType @default(FOOD)
  products Product[]
}

model TaxRate {
  id   BigInt @id @default(autoincrement())
  rate Int    @unique
}

enum UserRole {
  ADMIN
  USER
}

enum CategoryType {
  DRINK
  FOOD
}

enum PaymentMethod {
  CASH
  CARD
}
